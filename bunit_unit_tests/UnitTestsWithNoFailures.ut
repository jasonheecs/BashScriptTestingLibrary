#!/bin/bash

source ../bunit.shl

testSetup () {
    touch testFile
}


testAssertEqualsWithStrings () {
    assertEquals "something" "something"
}


testAssertEqualsWithIntegers () {
    assertEquals 10 10
}


testAssertEqualsWithIntegers2 () {
    assertEquals 5 $((10 - 5))
}


testAssertEqualsWithIntegers3 () {
    assertEquals 1 1
}


testAssertEqualsWithDoubles () {
    assertEquals 5.5 5.5
}


testAssertEqualsWithDoubles2 () {
    assertEquals 5.5 5.50
}


testAssertEqualsWithArrays () {
    local array1=(1,2,3)
    local array2=(1,2,3)
    assertEquals $array1 $array2
}


testAssertNotEqualsWithStrings () {
    assertNotEquals "something" "something else"
}


testAssertNotEqualsWithIntegers () {
    assertNotEquals 5 6
}


testAssertNotEqualsWithArrays () {
    local array1=(1,2,3)
    local array2=(4,5,6)
    assertNotEquals $array1 $array2
}


testAssertNull () {
    nullString=""
    assertNull "$nullString"
}


testAssertTrueWithFilename () {
    assertTrue  "-f \"testFile\""
}


testAssertTrueWithIntegers () {
    assertTrue "10 = 10"
}


testAssertFalseWithIntegers () {
    assertFalse "10 = 5"
}


testAssertFalseWithFilename () {
    assertFalse  "-f \"testFile2\""
}


testAssertFalseWithArray () {
    local array1=(1,2,3)
    local array2=(4,5,6)
    assertFalse "${array1} = ${array2}"
}


testAssertContainsWithString () {
    local string="FooBar"
    local substring="Bar"
    assertContains $substring $string
}


testAssertContainsWithArray () {
    local array1=(1,2,3)
    local num2=2
    assertContains $num2 $array1
}

function testAssertEqualsWithStringsFunction() {
    assertEquals "something" "something"
}

testTeardown () {
    rm testFile
}

runUnitTests
